@page "/Login"
@inject IAuthenticationService authService
@inject IMatDialogService matDialogService
@inject NavigationManager navManager
@attribute [AllowAnonymous]

<div class="row justify-content-center">
    <div class="col-xl-10 col-lg-12">
        <div class="row">
            <div class="col-12">
                <MatCard Class="p-5">
                    <MatH5 Class="text-center text-uppercase">Login</MatH5>
                    <MatCardContent>
                        <EditForm Model="user" OnValidSubmit="ExecuteLogin">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="mb-3">
                                <MatStringField @bind-Value="user.Email" Label="Email Address" 
                                    Required="true" Type="email" FullWidth="true"
                                    HelperText="Enter your email to gain access to your account." HelperTextPersistent="true"/>
                            </div>
                            <div class="mb-3">
                                <MatStringField @bind-Value="user.Password" Label="Password"
                                    Required="true" Type="password" FullWidth="true"
                                    HelperText="Enter your password to gain access to your account." HelperTextPersistent="true"/>
                            </div>
                            <div class="center-children">
                                <MatButton Raised Class="bg-secondary mx-2" Type="submit">
                                    Login
                                </MatButton>
                                <MatButton Raised Class="bg-secondary" Type="button" @onclick="LoadRegisterPage">
                                    Register
                                </MatButton>
                            </div>
                        </EditForm>
                    </MatCardContent>
                </MatCard>
            </div>
        </div>
    </div>
</div>

@code {
    private AuthenticationUserModel user = new();
    private string errorMessage = "";

    private async Task ExecuteLogin()
    {
        errorMessage = "";
        AuthenticatedUserModel result = await authService.Login(user);
        if (result is not null)
        {
            navManager.NavigateTo("/");
        }
        else
        {
            errorMessage = "Make sure your credentials are correct.";
            await OpenAlertFromService();
        }
    }

    private async Task OpenAlertFromService()
    {
        await matDialogService.AlertAsync(errorMessage);
    }

    private void LoadRegisterPage()
    {
        navManager.NavigateTo("/register");
    }
}
